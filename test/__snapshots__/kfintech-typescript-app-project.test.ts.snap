// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KFinTechTypeScriptAppProject accepts eslintFixableAsWarn=false: .eslintrc.json 1`] = `
{
  "env": {
    "jest": true,
    "node": true,
  },
  "extends": [
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
  ],
  "ignorePatterns": [
    "*.js",
    "*.d.ts",
    "node_modules/",
    "*.generated.ts",
    "coverage",
    "!.projenrc.ts",
    "!projenrc/**/*.ts",
  ],
  "overrides": [
    {
      "files": [
        ".projenrc.ts",
      ],
      "rules": {
        "max-len": "off",
      },
    },
    {
      "files": [
        ".projenrc.ts",
      ],
      "rules": {
        "@typescript-eslint/no-require-imports": "off",
        "import/no-extraneous-dependencies": "off",
      },
    },
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "project": "./tsconfig.dev.json",
    "sourceType": "module",
  },
  "plugins": [
    "@typescript-eslint",
    "import",
    "prettier",
  ],
  "root": true,
  "rules": {
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "generic",
      },
    ],
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-expect-error": true,
        "ts-ignore": true,
      },
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "field",
          "constructor",
          "method",
        ],
      },
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "format": [
          "camelCase",
        ],
        "prefix": [
          "is",
          "should",
          "has",
          "can",
          "did",
          "will",
        ],
        "selector": "variable",
        "types": [
          "boolean",
        ],
      },
      {
        "format": [
          "camelCase",
        ],
        "selector": "function",
      },
      {
        "format": [
          "PascalCase",
        ],
        "selector": "class",
      },
      {
        "format": [
          "PascalCase",
        ],
        "selector": "interface",
      },
      {
        "format": [
          "PascalCase",
        ],
        "selector": "typeAlias",
      },
      {
        "custom": {
          "match": true,
          "regex": "^T[A-Z]",
        },
        "format": [
          "PascalCase",
        ],
        "selector": "typeParameter",
      },
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-floating-promises": [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": [
      "error",
      {
        "ignoreParameters": true,
        "ignoreProperties": true,
      },
    ],
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-require-imports": [
      "error",
    ],
    "@typescript-eslint/no-shadow": [
      "error",
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/return-await": [
      "error",
    ],
    "comma-dangle": [
      "error",
      "always-multiline",
    ],
    "dot-notation": [
      "error",
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/test/**",
          "**/build-tools/**",
          ".projenrc.ts",
          "projenrc/**/*.ts",
        ],
        "optionalDependencies": false,
        "peerDependencies": true,
      },
    ],
    "import/no-unresolved": [
      "error",
    ],
    "import/order": [
      "warn",
      {
        "alphabetize": {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": [
          "builtin",
          "external",
        ],
      },
    ],
    "indent": [
      "error",
      2,
    ],
    "key-spacing": [
      "error",
    ],
    "max-lines": [
      "error",
      300,
    ],
    "no-bitwise": [
      "error",
    ],
    "no-console": "warn",
    "no-duplicate-imports": [
      "error",
    ],
    "no-multiple-empty-lines": [
      "error",
    ],
    "no-return-await": [
      "off",
    ],
    "no-shadow": [
      "off",
    ],
    "no-trailing-spaces": [
      "error",
    ],
    "prettier/prettier": "error",
    "quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": true,
        "avoidEscape": true,
      },
    ],
    "semi": [
      "error",
      "always",
    ],
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": {
      "node": {},
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.dev.json",
      },
    },
  },
}
`;

exports[`KFinTechTypeScriptAppProject has required configuration 1`] = `
{
  "compilerOptions": {
    "esModuleInterop": true,
    "exactOptionalPropertyTypes": true,
    "forceConsistentCasingInFileNames": true,
    "isolatedModules": true,
    "moduleResolution": "node16",
    "noEmit": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitOverride": true,
    "noImplicitReturns": true,
    "noPropertyAccessFromIndexSignature": true,
    "noUncheckedIndexedAccess": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "outDir": "lib",
    "rootDir": "src",
    "skipLibCheck": true,
    "strict": true,
  },
  "exclude": [],
  "extends": "@tsconfig/node18/tsconfig.json",
  "include": [
    "src/**/*.ts",
  ],
  "ts-node": {
    "esm": true,
    "experimentalSpecifierResolution": "node",
    "preferTsExts": false,
  },
}
`;

exports[`KFinTechTypeScriptAppProject has required configuration 2`] = `
{
  "compilerOptions": {
    "moduleResolution": "node16",
    "noEmit": true,
  },
  "exclude": [
    "node_modules",
  ],
  "extends": "@tsconfig/node18/tsconfig.json",
  "include": [
    "src/**/*.ts",
    "test/**/*.ts",
    ".projenrc.ts",
    "projenrc/**/*.ts",
  ],
  "ts-node": {
    "esm": true,
    "experimentalSpecifierResolution": "node",
    "preferTsExts": false,
  },
}
`;

exports[`KFinTechTypeScriptAppProject has required configuration 3`] = `
{
  "//": "~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".",
  "devDependencies": {
    "@tsconfig/node18": "*",
    "@types/jest": "*",
    "@types/node": "^18",
    "@typescript-eslint/eslint-plugin": "^6",
    "@typescript-eslint/parser": "^6",
    "constructs": "^10.0.0",
    "esbuild": "*",
    "eslint": "^8",
    "eslint-config-prettier": "*",
    "eslint-import-resolver-typescript": "*",
    "eslint-plugin-import": "*",
    "eslint-plugin-prettier": "*",
    "jest": "*",
    "jest-junit": "^15",
    "prettier": "*",
    "projen": ">=0.79.23",
    "ts-jest": "*",
    "ts-node": "*",
    "typescript": "*",
  },
  "jest": {
    "clearMocks": true,
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "/node_modules/",
    ],
    "coverageReporters": [
      "json",
      "lcov",
      "clover",
      "cobertura",
      "text",
    ],
    "moduleNameMapper": {
      "^(\\.{1,2}/.*)\\.m?js$": "$1",
    },
    "reporters": [
      "default",
      [
        "jest-junit",
        {
          "outputDirectory": "test-reports",
        },
      ],
    ],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.ts?(x)",
      "<rootDir>/@(test|src)/**/*(*.)@(spec|test).ts?(x)",
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
    ],
    "transform": {
      "^.+\\.m?[tj]sx?$": [
        "ts-jest",
        {
          "tsconfig": "tsconfig.dev.json",
          "useESM": true,
        },
      ],
    },
    "watchPathIgnorePatterns": [
      "/node_modules/",
    ],
  },
  "license": "Apache-2.0",
  "name": "test",
  "publishConfig": {
    "access": "public",
  },
  "scripts": {
    "build": "npx projen build",
    "bundle": "npx projen bundle",
    "bundle:index": "npx projen bundle:index",
    "bundle:index:watch": "npx projen bundle:index:watch",
    "clobber": "npx projen clobber",
    "compile": "npx projen compile",
    "default": "npx projen default",
    "eject": "npx projen eject",
    "eslint": "npx projen eslint",
    "package": "npx projen package",
    "post-compile": "npx projen post-compile",
    "post-upgrade": "npx projen post-upgrade",
    "pre-compile": "npx projen pre-compile",
    "projen": "npx projen",
    "test": "npx projen test",
    "test:update": "npx projen test:update",
    "test:watch": "npx projen test:watch",
    "upgrade": "npx projen upgrade",
    "watch": "npx projen watch",
  },
  "type": "module",
  "version": "0.0.0",
}
`;

exports[`KFinTechTypeScriptAppProject has required configuration 4`] = `
{
  "//": "~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".",
  "jest.jestCommandLine": "npm test --",
  "jest.rootPath": "./",
}
`;

exports[`KFinTechTypeScriptAppProject has required configuration 5`] = `
{
  "recommendations": [
    "dbaeumer.vscode-eslint",
    "Orta.vscode-jest",
  ],
}
`;

exports[`KFinTechTypeScriptAppProject has required configuration 6`] = `
{
  "env": {
    "jest": true,
    "node": true,
  },
  "extends": [
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
  ],
  "ignorePatterns": [
    "*.js",
    "*.d.ts",
    "node_modules/",
    "*.generated.ts",
    "coverage",
    "!.projenrc.ts",
    "!projenrc/**/*.ts",
  ],
  "overrides": [
    {
      "files": [
        ".projenrc.ts",
      ],
      "rules": {
        "max-len": "off",
      },
    },
    {
      "files": [
        ".projenrc.ts",
      ],
      "rules": {
        "@typescript-eslint/no-require-imports": "off",
        "import/no-extraneous-dependencies": "off",
      },
    },
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "project": "./tsconfig.dev.json",
    "sourceType": "module",
  },
  "plugins": [
    "@typescript-eslint",
    "import",
    "prettier",
  ],
  "root": true,
  "rules": {
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "generic",
      },
    ],
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-expect-error": true,
        "ts-ignore": true,
      },
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "field",
          "constructor",
          "method",
        ],
      },
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "format": [
          "camelCase",
        ],
        "prefix": [
          "is",
          "should",
          "has",
          "can",
          "did",
          "will",
        ],
        "selector": "variable",
        "types": [
          "boolean",
        ],
      },
      {
        "format": [
          "camelCase",
        ],
        "selector": "function",
      },
      {
        "format": [
          "PascalCase",
        ],
        "selector": "class",
      },
      {
        "format": [
          "PascalCase",
        ],
        "selector": "interface",
      },
      {
        "format": [
          "PascalCase",
        ],
        "selector": "typeAlias",
      },
      {
        "custom": {
          "match": true,
          "regex": "^T[A-Z]",
        },
        "format": [
          "PascalCase",
        ],
        "selector": "typeParameter",
      },
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-floating-promises": [
      "error",
    ],
    "@typescript-eslint/no-inferrable-types": [
      "error",
      {
        "ignoreParameters": true,
        "ignoreProperties": true,
      },
    ],
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-require-imports": [
      "error",
    ],
    "@typescript-eslint/no-shadow": [
      "error",
    ],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/return-await": [
      "error",
    ],
    "comma-dangle": [
      "error",
      "always-multiline",
    ],
    "dot-notation": [
      "warn",
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/test/**",
          "**/build-tools/**",
          ".projenrc.ts",
          "projenrc/**/*.ts",
        ],
        "optionalDependencies": false,
        "peerDependencies": true,
      },
    ],
    "import/no-unresolved": [
      "error",
    ],
    "import/order": [
      "warn",
      {
        "alphabetize": {
          "caseInsensitive": true,
          "order": "asc",
        },
        "groups": [
          "builtin",
          "external",
        ],
      },
    ],
    "indent": [
      "error",
      2,
    ],
    "key-spacing": [
      "warn",
    ],
    "max-lines": [
      "error",
      300,
    ],
    "no-bitwise": [
      "error",
    ],
    "no-console": "warn",
    "no-duplicate-imports": [
      "error",
    ],
    "no-multiple-empty-lines": [
      "warn",
    ],
    "no-return-await": [
      "off",
    ],
    "no-shadow": [
      "off",
    ],
    "no-trailing-spaces": [
      "warn",
    ],
    "prettier/prettier": [
      "warn",
    ],
    "quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": true,
        "avoidEscape": true,
      },
    ],
    "semi": [
      "error",
      "always",
    ],
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx",
      ],
    },
    "import/resolver": {
      "node": {},
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.dev.json",
      },
    },
  },
}
`;

exports[`KFinTechTypeScriptAppProject has required configuration 7`] = `"v18.18.2"`;
